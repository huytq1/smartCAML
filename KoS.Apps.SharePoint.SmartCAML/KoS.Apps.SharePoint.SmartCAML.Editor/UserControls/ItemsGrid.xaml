<UserControl x:Class="KoS.Apps.SharePoint.SmartCAML.Editor.Controls.ItemsGrid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:KoS.Apps.SharePoint.SmartCAML.Editor.Controls"
             xmlns:utils="clr-namespace:KoS.Apps.SharePoint.SmartCAML.Editor.Utils"
             mc:Ignorable="d" 
             d:DesignHeight="150" d:DesignWidth="300">

    <UserControl.CommandBindings>
        <CommandBinding Command="utils:MyCommands.HideColumn" CanExecute="HideColumnCommand_CanExecute" Executed="HideColumnCommand_Executed" />
        <CommandBinding Command="utils:MyCommands.HideAllHiddenColumns" CanExecute="HideAllHiddenColumnsCommand_CanExecute" Executed="HideAllHiddenColumnsCommand_Executed" />
        <CommandBinding Command="utils:MyCommands.HideAllReadonlyColumns" CanExecute="HideAllReadonlyColumnsCommand_CanExecute" Executed="HideAllReadonlyColumnsCommand_Executed" />
        <CommandBinding Command="utils:MyCommands.HideUnPinedColumn" CanExecute="HideColumnCommand_CanExecute" Executed="HideColumnCommand_Executed" />
        <CommandBinding Command="utils:MyCommands.UnhideAllColumn" CanExecute="UnHideColumnCommand_CanExecute" Executed="UnHideColumnCommand_Executed" />
        <CommandBinding Command="utils:MyCommands.PinColumn" CanExecute="HideColumnCommand_CanExecute" Executed="HideColumnCommand_Executed" />
        <CommandBinding Command="utils:MyCommands.HideUnPinedColumn" CanExecute="HideColumnCommand_CanExecute" Executed="HideColumnCommand_Executed" />
        <CommandBinding Command="utils:MyCommands.CustomizeColumn" Executed="CustomizeColumnCommand_Executed" />
    </UserControl.CommandBindings>
    <Grid>
        <Grid.Resources>
            <Style TargetType="DataGridColumnHeader">
                <Setter Property="Foreground" Value="#FF5D5D5D"/>
                <Setter Property="FontSize" Value="11" />
                <Setter Property="FontFamily" Value="Calibri"/>
                <Setter Property="FontWeight" Value="500" />
            </Style>
        </Grid.Resources>
        
        <DataGrid x:Name="ucItems" 
                  AutoGenerateColumns="False" 
                  HeadersVisibility="All" 
                  SelectionMode="Extended" 
                  HorizontalGridLinesBrush="#FF86A4C1" 
                  VerticalGridLinesBrush="#FF86A4C1"
                  AlternatingRowBackground="#FFE0E5FF" 
                  SelectionUnit="Cell"
                  IsReadOnly="False" 
                  RowEditEnding="ucItems_RowEditEnding" 
                  Background="White" 
                  RowHeight="20"
                  >
            <DataGrid.Resources>
                <ContextMenu x:Key="DataGridColumnHeaderContextMenu" >
                    <MenuItem Header="Hide" Command="utils:MyCommands.HideColumn" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                    <MenuItem Header="Hide all">
                        <MenuItem Header="Hidden columns" Command="utils:MyCommands.HideAllHiddenColumns" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                        <MenuItem Header="Readonly columns" Command="utils:MyCommands.HideAllReadonlyColumns" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                    </MenuItem>
                    <MenuItem Header="Show all" Command="utils:MyCommands.UnhideAllColumn" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                    <Separator />
                    <MenuItem Header="Customize..." Command="utils:MyCommands.CustomizeColumn" CommandTarget="{Binding Path=PlacementTarget, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}}"/>
                </ContextMenu>

                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="ContextMenu"
                    Value="{StaticResource DataGridColumnHeaderContextMenu}" />
                </Style>
            </DataGrid.Resources>
        </DataGrid>
    </Grid>
</UserControl>
